11_flask-static (the parent of app.py) directly contains a "static" subdirectory, which contains the 2 files that will be served statically.
The app.py file itself is not within the static folder.
We realized that nothing had to be added in app.py to serve static files.
I expect that requesting http://localhost:5000/static/foo will give me the contents of the static/foo file,
and that requesting http://localhost:5000/static/foo.html will similarly give me the HTML file (rendered).

Post-running notes:
We realized that we could access the static/foo.html file through http://localhost:5000/static/foo.html,
but we could not access the static/foo file through http://localhost:5000/static/foo.
We suspected that this was because it did not have a file extension. So we renamed it to foo.txt and tried
again (with http://localhost:5000/static/foo.txt) and it worked.

We also decided to experiment with subfolders of the static folder, and it worked as expected.
Moving foo.html to static/subfolder would serve the file at http://localhost:5000/static/subfolder/foo.html.

Post-conversation Realization:
The issue was not that the foo file was inaccessible, but rather my browser decided to download it instead.
We didn't realize this initially because my browser did not ask for permission before downloading.